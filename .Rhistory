Unicos <- str_subset(DataPdf$UrlPdfs,pattern = "..$",negate = F)
Unicos <- str_subset(DataPdf$UrlPdfs,pattern = "..pdf",negate = F)
Unicos
Unicos <- str_subset(DataPdf$UrlPdfs,pattern = "\\..pdf",negate = F)
Unicos <- str_subset(DataPdf$UrlPdfs,pattern = "\\..pdf",negate = F)
Unicos
rm(Unicos)
DataPdf$UrlPdfs
View(DataPdf)
View(DataPdf2)
View(DataPdf)
#Unicos1 <- str_subset(DataPdf$UrlPdfs,pattern = "\\..pdf",negate = F)
DataPdf2 <- DataPdf%>%
group_by(Número)%>%
summarise(NumeroDeProyectos=n())
View(DataPdf2)
#Falta leer una Url
Browser$navigate("http://www2.congreso.gob.pe/sicr/tradocestproc/Expvirt_2011.nsf/visbusqptramdoc1621/06584?opendocument") #
Browser$screenshot(display=TRUE)
#Raspar las Urles de los proyectos de ley PDF
Pagina_actual<-Browser$getPageSource()
Pagina<-read_html(Pagina_actual[[1]]) # en el elemento 1 de la lista está la url de la página actual
DataPdfUno<-Pagina%>%
html_node(xpath = '/html/body/form/table[2]/tbody/tr[2]/td[1]/table/tbody/tr/td/div/table')%>%
html_nodes("a")%>%
html_attr("href")
DataPdfUno
DataPdfUno <- as.data.frame(DataPdfUno)
names(DataPdfUno)[1] <- "UrlPdfs"
DataPdfUno <- DataPdfUno%>%
mutate(Número="30864")
View(DataPdfUno)
View(DataPdf)
View(DataPdfUno)
DataPdfUno <- as.data.frame(DataPdfUno)
names(DataPdfUno)[1] <- "UrlPdfs"
DataPdfUno <- DataPdfUno%>%
mutate(Número="30864")
View(DataPdfUno)
DataPdfUno<-Pagina%>%
html_node(xpath = '/html/body/form/table[2]/tbody/tr[2]/td[1]/table/tbody/tr/td/div/table')%>%
html_nodes("a")%>%
html_attr("href")
DataPdfUno <- as.data.frame(DataPdfUno)
names(DataPdfUno)[1] <- "UrlPdfs"
View(DataPdfUno)
DataPdfUno <- DataPdfUno%>%
mutate(Número="30864")
#Juntamos
DataPdf <- rbind(DataPdf,DataPdfUno)
View(DataPdf)
#Contamos
DataPdf2 <- DataPdf%>%
group_by(Número)%>%
summarise(NumeroDeProyectos=n())
View(DataPdf2)
View(DataUnionB2Falta)
View(DataPdf2)
#Juntamos
DataUnionB2Falta <- merge.data.frame(DataUnionB2Falta,DataPdf2,
by = c("Número"),
all.x = T,sort = F)
View(DataUnionB2Falta)
View(DataUnionB2Falta)
View(DataPdf)
#Juntamos Nuevamnete con DataPdf
DataUnionB2Falta <- merge.data.frame(DataUnionB2Falta,DataPdf,by = c("Número"),
all.y = T,sort = F)
View(DataUnionB2Falta)
#Guardamos
saveRDS(DataUnionB2Falta,file = "Leyes/DataNeta3.rds")
#---- cerrar la sesión #----
Browser$close()
server$stop()
View(DataBruta2)
View(DataUnionBruta2)
View(DataUnionB2Full)
View(DataUnionB2Full)
#Librerias necesarios
library(tidyverse)
library(pdftools)
library(tesseract)
#lamar y juntar las bases de datos
DataNeta <- readRDS("Leyes/DataNeta1.rds")
View(DataNeta)
View(DataNeta)
#---- 2015 en adelante #----
#Unimos las bases brutas
UnionDataBruta <- cbind(readRDS("Leyes/TodasLeyesBruta.rds"),
readRDS("Leyes/DataUrlNormaBruta.rds"))
View(UnionDataBruta)
UnionDataBruta <- UnionDataBruta%>%
select(c(1:7))
#Trabajaremos con las leyes de 2015 para adelante
#Filtramos para el año 2015 en adelante
UnionDataBruta <- UnionDataBruta%>%
filter(Publicación>="2015-01-01")
unique(UnionDataBruta$Norma)
UnionDataBruta <- UnionDataBruta%>%
filter(Norma!="RESOLUCION LEGISLATIVA")
UnionDataBruta <- UnionDataBruta%>%
filter(!Número%in%c("30479","30569","30831","30833")) #No tienen Url
#Hacer limpieza
UnionDataBruta[1,7]
UnionDataBruta[,7] <- sapply(UnionDataBruta[,7], function(x) str_remove_all(x,pattern = "^javascript:OpenWindowLotus\\('"))
UnionDataBruta[,7] <- sapply(UnionDataBruta[,7], function(x) str_remove_all(x,pattern = "\\'\\);$"))
View(UnionDataBruta)
#Unir con:
PdfUrlTodoUno <- readRDS("Leyes/DataPdfBruta.rds") #Data genereda con un for de 637 para un solo pdf (importantísimo)
View(UnionDataBruta)
View(PdfUrlTodoUno)
UnionDataBruta <- cbind(UnionDataBruta,readRDS("Leyes/DataPdfBruta.rds"))
View(UnionDataBruta)
#Eliminar los NAs
colSums(is.na(UnionDataBruta))
UnionDataNeta1 <- UnionDataBruta%>% #na.omit() No es elegante
filter(UrlPdf!=is.na(UrlPdf))
View(UnionDataNeta1)
View(UnionDataNeta1)
#Eliminamos las dos utimas columnas, ya no aportan
UnionDataNeta1 <- UnionDataNeta1[,c(1:7)]
#Nueva data para unir
DataUrlPdfs <- readRDS("Leyes/DataPdfBruta2015.rds")
View(DataUrlPdfs)
#Group by
DataUrlPdfCuenta <- DataUrlPdfs%>%
group_by(NumeroLey)%>%
summarise(Cuenta=n())
names(DataUrlPdfCuenta)[1] <- "Número"
View(DataUrlPdfCuenta)
View(DataUrlPdfCuenta)
#unimos UnionDataNeta11 con DataUrlUno
UnionDataNeta1 <- merge.data.frame(UnionDataNeta1,DataUrlPdfCuenta,
by = c("Número"),all.x = T,
sort = F)
View(UnionDataNeta1)
names(UnionDataNeta1)[8] <- "NumeroDeProyectos"
View(DataUrlPdfs)
View(DataNeta)
View(DataUrlPdfs)
names(DataUrlPdfs)[c(1:2)] <- c("UrlPdfs","Número")
View(DataUrlPdfs)
#Merge final
DataNeta1 <- merge.data.frame(UnionDataNeta1,DataUrlPdfs,by = c("Número"),
all.y = T,sort = F)
View(DataNeta1)
#Guardar
saveRDS(DataNeta,file = "Leyes/DataNeta1.rds")
View(UnionDataBruta)
#lamar y juntar las bases de datos
DataNeta <- readRDS("Leyes/DataNeta1.rds")
#lamar y juntar las bases de datos
DataNeta <- readRDS("Leyes/DataNeta1.rds")
View(DataNeta)
#---- 2015 en adelante #----
#Unimos las bases brutas
UnionDataBruta <- cbind(readRDS("Leyes/TodasLeyesBruta.rds"),
readRDS("Leyes/DataUrlNormaBruta.rds"))
UnionDataBruta <- UnionDataBruta%>%
select(c(1:7))
#Trabajaremos con las leyes de 2015 para adelante
#Filtramos para el año 2015 en adelante
UnionDataBruta <- UnionDataBruta%>%
filter(Publicación>="2015-01-01")
unique(UnionDataBruta$Norma)
UnionDataBruta <- UnionDataBruta%>%
filter(Norma!="RESOLUCION LEGISLATIVA")
UnionDataBruta <- UnionDataBruta%>%
filter(!Número%in%c("30479","30569","30831","30833")) #No tienen Url
#Hacer limpieza
UnionDataBruta[1,7]
UnionDataBruta[,7] <- sapply(UnionDataBruta[,7], function(x) str_remove_all(x,pattern = "^javascript:OpenWindowLotus\\('"))
UnionDataBruta[,7] <- sapply(UnionDataBruta[,7], function(x) str_remove_all(x,pattern = "\\'\\);$"))
UnionDataBruta <- cbind(UnionDataBruta,readRDS("Leyes/DataPdfBruta.rds"))
View(UnionDataBruta)
#Eliminar los NAs
colSums(is.na(UnionDataBruta))
UnionDataNeta1 <- UnionDataBruta%>% #na.omit() No es elegante
filter(UrlPdf!=is.na(UrlPdf))
#Eliminamos las dos utimas columnas, ya no aportan
UnionDataNeta1 <- UnionDataNeta1[,c(1:7)]
#Nueva data para unir
DataUrlPdfs <- readRDS("Leyes/DataPdfBruta2015.rds")
table(DataUrlPdfs$NumeroLey)
#Group by
DataUrlPdfCuenta <- DataUrlPdfs%>%
group_by(NumeroLey)%>%
summarise(Cuenta=n())
names(DataUrlPdfCuenta)[1] <- "Número"
#unimos UnionDataNeta1 con DataUrlPdfCuenta
UnionDataNeta1 <- merge.data.frame(UnionDataNeta1,DataUrlPdfCuenta,
by = c("Número"),all.x = T,
sort = F)
View(UnionDataNeta1)
names(UnionDataNeta1)[8] <- "NumeroDeProyectos"
View(DataUrlPdfs)
names(DataUrlPdfs)[c(1:2)] <- c("UrlPdfs","Número")
unique(DataUrlPdfs$Número)
#Merge final
DataNeta1 <- merge.data.frame(UnionDataNeta1,DataUrlPdfs,by = c("Número"),
all.y = T,sort = F)
#Guardar
saveRDS(DataNeta1,file = "Leyes/DataNeta1.rds")
#lamar y juntar las bases de datos
DataNeta <- readRDS("Leyes/DataNeta1.rds")
View(DataNeta)
Data2 <- readRDS("Leyes/DataNeta2.rds")
Data3 <- readRDS("Leyes/DataNeta3.rds")
View(Data2)
View(Data3)
names(DataNeta)
names(Data2)
names(Data3)
View(Data2)
#
Data2 <- Data2%>%
select(c(1:7,9:10))
Data3 <- Data3%>%
select(c(1:7,9:10))
View(Data3)
View(Data2)
#
names(DataNeta)
names(Data2)
names(Data3)
View(DataNeta)
View(Data3)
#Juntar
1035+765+45
DataNeta <- rbind(DataNeta,Data2,Data3)
View(DataNeta)
View(DataNeta)
View(DataNeta)
DataNeta <- DataNeta%>%
arrange(Publicación)
View(DataNeta)
#Guardamos
saveRDS(DataNeta,file = "Leyes/DataNetaTotal") #2015 en adelante
#Guardamos
saveRDS(DataNeta,file = "Leyes/DataNetaTotal.rds") #2015 en adelante
#Cargar la data
DataLey <- readRDS(file = "Leyes/DataNetaTotal.rds")
View(DataLey)
View(DataLey)
#
LinkPdf <- DataLey$UrlPdfs
View(DataLey)
#Filtramos para el ultimo año
DataLey <- DataLey%>%
filter(Publicación>="2020-01-01")
View(DataLey)
#
LinkPdf <- DataLey$UrlPdfs
HojaPdf[1]
LinkPdf[1]
LinkPdf[1]
LinkPdf[2]
ReadPDF<-pdf_ocr_text(LinkPdf[2],language = "spa",dpi = 600)%>% #pages = c(1:2)
str_split(pattern = "\n")%>%
unlist()%>%
#str_replace_all("[^ [: alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_trim()
ReadPDF<-pdf_ocr_text(LinkPdf[1],language = "spa",dpi = 600)%>% #pages = c(1:2)
str_split(pattern = "\n")%>%
unlist()%>%
#str_replace_all("[^ [: alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_trim()
# ver cada pagina
InfoHoja <- ReadPDF[1]
InfoHoja
# ver cada pagina
InfoHoja <- ReadPDF[2]
InfoHoja
ReadPDF
ReadPDF<-pdf_ocr_text(LinkPdf[1],language = "spa",dpi = 600) #pages = c(1:2)
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")
InfoPDF
install.packages("textreadr") # lee pdfs,tiene otras funciones importantes
library(textreadr)
#---- Leer PDF #----
KeyWords <- c("Recursos Del Estado","Presente Iniciativa","Costo Beneficio")
KeyMatch<-str_c(KeyWords,collapse = "|")
#Te voy pasando algunos filtros para la línea de costo beneficio: recursos del estado, presente iniciativa.
loc <- function(var, regex, n = 1, ignore.case = TRUE){
locs <- grep(regex, var, ignore.case = ignore.case)
out <- sort(unique(c(locs - 1, locs, locs + 1)))
out <- out[out > 0]
out[out <= length(var)]
}
InfoPDF <- ReadPDF%>%
slice(loc(text, KeyMatch))
InfoPDF <- ReadPDF%>%
slice(loc(text, 'Presente Iniciativa'))
#Te voy pasando algunos filtros para la línea de costo beneficio: recursos del estado, presente iniciativa.
hist(nchar(ReadPDF$text), 20)
ReadPDF
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n\n")
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n\n")%>%
unlist()
InfoPDF
InfoPDF
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n\n")%>%
unlist()%>%
#str_replace_all("[^ [: alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F)
InfoPDF
#---- Leer PDF #----
KeyWords <- c("Los Congresistas","Recursos Del Estado","Presente Iniciativa","Costo Beneficio")
KeyMatch<-str_c(KeyWords,collapse = "|")
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n\n")%>%
unlist()%>%
#str_replace_all("[^ [: alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F)
InfoPDF
InfoPDF
#Librerias necesarios
library(tidyverse)
library(pdftools)
library(tesseract)
#Cargar la data
DataLey <- readRDS(file = "Leyes/DataNetaTotal.rds")
View(DataLey)
#Filtramos para el último año
DataLey <- DataLey%>%
filter(Publicación>="2020-01-01")
#creamos un ID para identificar
DataLey <- DataLey%>%
mutate(ID=c(1:472))
View(DataLey)
#Extraemos las Urls de los PDFs
LinkPdf <- DataLey$UrlPdfs
#---- Leer PDF #----
KeyWords <- c("Los Congresistas","Recursos Del Estado","Presente Iniciativa","Costo Beneficio")
KeyMatch<-str_c(KeyWords,collapse = "|")
ReadPDF<-pdf_ocr_text(LinkPdf[1],language = "spa",dpi = 600) #pages = c(1:2)
#---- Leer PDF #----
KeyWords <- c("Ley Que","Ley De","Ley Por","Los Congresistas","Recursos Del Estado","Presente Iniciativa","Costo Beneficio")
KeyMatch<-str_c(KeyWords,collapse = "|")
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n\n")%>%
unlist()%>%
#str_replace_all("[^ [: alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
InfoPDF
ReadPDF
ReadPDF
InfoPDF
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n")%>%
unlist()%>%
#str_replace_all("[^ [: alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
InfoPDF
ReadPDF
#---- Leer PDF #----
KeyWords <- c("Ley Que","Ley De","Ley Por","Los Congresistas","Congresista","Iniciativa","Miembro",
"Grupo","Parlamentario","Costo Beneficio","Presente Iniciativa","Presupuesto",
"Recursos Del Estado","Gasto")
KeyMatch<-str_c(KeyWords,collapse = "|")
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n")%>%
unlist()%>%
#str_replace_all("[^ [: alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n")%>%
unlist()%>%
#str_replace_all("[^ [: alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
InfoPDF
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n")%>%
unlist()%>%
str_replace_all("[^ [: alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
InfoPDF
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n")%>%
unlist()%>%
str_replace_all("[^[: alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
InfoPDF
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n")%>%
unlist()%>%
str_replace_all("[^[:alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
InfoPDF
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n")%>%
unlist()%>%
str_replace_all("[[:alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
InfoPDF <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n")%>%
unlist()%>%
str_replace_all("[^[:alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
InfoPDF
#Convierte en data estructurada
InfoPDF<-InfoPDF%>%
matrix(ncol = length(InfoPDF),byrow = T)%>%
as.data.frame()
View(InfoPDF)
View(InfoPDF)
View(InfoPDF)
View(DataLey)
#Agregamos los identificadores
InfoPDF$ID <- DataLey[1,10] #Columna fija
InfoPDF$Numero <- DataLey[1,1]
View(InfoPDF)
#Hacemos el For para 5 pdfs
for (j in 2:2) {
ReadPDF<-pdf_ocr_text(LinkPdf[j],language = "spa",dpi = 600)
InfoPdfs <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n")%>%
unlist()%>%
str_replace_all("[^[:alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
#Convierte en data estructurada
InfoPdfs<-InfoPdfs%>%
matrix(ncol = length(InfoPdfs),byrow = T)%>%
as.data.frame()
#Agregamos los identificadores
InfoPdfs$ID <- DataLey[j,10]    #Columna fija
InfoPdfs$Numero <- DataLey[j,1] #Columna fija
#Juntamos la data
InfoPDF <- bind_rows(InfoPDF,InfoPdfs)
}
View(InfoPDF)
#Hacemos el For para 5 pdfs
for (j in 3:4) {
print(j)
ReadPDF<-pdf_ocr_text(LinkPdf[j],language = "spa",dpi = 600)
InfoPdfs <- ReadPDF%>%
str_to_title(locale = "sp")%>% #converte en forma de título en español
str_split(pattern = "\n")%>%
unlist()%>%
str_replace_all("[^[:alnum:]]"," ")%>% # reemplaza a todo distinto a alfanumerico por un espacio blanco
str_replace_all("  "," ")%>%
str_trim()%>%
str_subset(pattern =KeyMatch,negate = F) #Extrae solo las que contiene el keyword
#Convierte en data estructurada
InfoPdfs<-InfoPdfs%>%
matrix(ncol = length(InfoPdfs),byrow = T)%>%
as.data.frame()
#Agregamos los identificadores
InfoPdfs$ID <- DataLey[j,10]    #Columna fija
InfoPdfs$Numero <- DataLey[j,1] #Columna fija
#Juntamos la data
InfoPDF <- bind_rows(InfoPDF,InfoPdfs)
#Descansar un rato
Sys.sleep(2)
}
View(InfoPdfs)
View(InfoPDF)
View(InfoPDF)
View(DataLey)
#---- Leer PDF #----
KeyWords <- c("Ley Que","Ley De","Ley Por","Los Congresistas","Congresista","Miembro",
"Grupo","Parlamentario","Costo Beneficio","Presente Iniciativa","Presupuesto",
"Recursos Del Estado","Gasto","Gastos","Beneficios","Costos",
"Presupuestarios","Recursos")
KeyMatch<-str_c(KeyWords,collapse = "|")
View(InfoPDF)
